// Generated by CoffeeScript 1.10.0
(function() {
  var browsersync, cheerio, data, del, gulp, minicss, minihtml, minijs, mysql, request, runsequence;

  gulp = require('gulp');

  minijs = require('gulp-uglify');

  minicss = require('gulp-minify-css');

  minihtml = require('gulp-minify-html');

  browsersync = require('browser-sync');

  runsequence = require('run-sequence');

  del = require('del');

  request = require('superagent');

  cheerio = require('cheerio');

  mysql = require('./db');

  data = [];

  gulp.task('default', function() {
    return setInterval(function() {
      return runsequence(['spider'], ['insert']);
    }, 10 * 1000);
  });

  gulp.task('clean', function(callback) {
    return del('./dest/**/*.*', callback);
  });

  gulp.task('miniJS', function() {
    return gulp.src('*.js').pipe(minijs()).pipe(gulp.dest('./dest/'));
  });

  gulp.task('miniCSS', function() {
    return gulp.src('*.css').pipe(minicss()).pipe(gulp.dest('./dest/'));
  });

  gulp.task('miniHTML', function() {
    return gulp.src('*.html').pipe(minihtml()).pipe(gulp.dest('./dest/'));
  });

  gulp.task('spider', function(callback) {
    var page, url;
    data = [];
    page = Math.floor(Math.random() * 20 + 1);
    url = 'http://www.tuicool.com/ah/0/' + page.toString() + '?lang=1';
    request.get(url).end(function(err, res) {
      var $;
      if (!err) {
        $ = cheerio.load(res.text);
        console.log('url:' + url);
        console.log('=================================================');
        $('#list_article .single_fake').each(function() {
          var $a, $span, $tmp, href, time, title;
          $tmp = cheerio.load($(this).html());
          $a = $tmp('div.single a').get(0);
          href = $tmp($a).attr('href');
          title = $tmp($a).attr('title');
          $span = $tmp('div.tip.meta-tip span:nth-child(2)').get(0);
          time = $tmp($span).text().trim();
          return mysql.query({
            sql: 'INSERT into tcool(href,title,time) VALUES(' + href + ',' + title + ',' + time + '))',
            handler: function(res) {
              return console.log(res);
            }
          });
        });
        return console.log("^__^^__^此次爬行完毕1^__^^__^");
      } else {
        return console.log('err');
      }
    });
    return callback();
  });

  gulp.task('insert', function(callback) {
    var href, i, item, len, time, title;
    console.log("data:" + data.length);
    if (data.length > 0) {
      for (i = 0, len = data.length; i < len; i++) {
        item = data[i];
        href = item.href;
        title = item.title;
        time = item.time;
        mysql.query({
          sql: 'INSERT into tcool(href,title,time) VALUES(' + href + ',' + title + ',' + time + '))',
          handler: function(res) {
            return console.log(res);
          }
        });
      }
    }
    return callback();
  });

  gulp.task('build', function(callback) {
    return runsequence(['miniCSS', 'miniJS', 'miniHTML'], callback);
  });

  gulp.task('watch', function() {
    return gulp.watch(['./*.js', '!gulpfile.js'], ['spider']);
  });

  gulp.task('reload', function(callback) {
    console.log('this is reload..........');
    return runsequence(['spider'], callback);
  });

  gulp.task('reload-browser', function() {
    return browsersync.reload();
  });

  gulp.task('server', function() {
    return browsersync.init({
      server: {
        'baseDir': './dest/'
      },
      port: 8000
    });
  });

}).call(this);
